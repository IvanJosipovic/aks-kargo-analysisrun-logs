name: CICD

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
      - 'alpha'
      - 'beta'
      - 'dev'
  pull_request:
    types: [opened, reopened, synchronize]
  merge_group:

jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v5
      with:
        global-json-file: global.json

    - name: .NET Build
      run: dotnet build -c Release

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Docker Build
      working-directory: src/AKS.Kargo.AnalysisRun.Logs
      run: docker build -t test.loc/aks-kargo-analysisrun-logs .

    - name: Docker Buildx
      working-directory: src/AKS.Kargo.AnalysisRun.Logs
      run: docker buildx build --platform linux/amd64,linux/arm64 -t test.loc/aks-kargo-analysisrun-logs .

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'test.loc/aks-kargo-analysisrun-logs'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
      env:
        TRIVY_DISABLE_VEX_NOTICE: true

  create-release:
    if: ${{ github.event_name != 'pull_request' }}
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-test]
    steps:
    - uses: actions/checkout@v5

    - name: Configure Git
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

    - name: Semantic Release
      uses: cycjimmy/semantic-release-action@v4
      id: semantic
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        extra_plugins: |
          conventional-changelog-conventionalcommits

    - name: Set up Docker Buildx
      if: steps.semantic.outputs.new_release_published == 'true'
      uses: docker/setup-buildx-action@v3

    - name: Docker Push
      if: steps.semantic.outputs.new_release_published == 'true'
      working-directory: src/AKS.Kargo.AnalysisRun.Logs
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${GITHUB_ACTOR} --password-stdin

        docker buildx build --push --platform linux/amd64,linux/arm64 -t ghcr.io/${GITHUB_REPOSITORY,,}/aks-kargo-analysisrun-logs:latest -t ghcr.io/${GITHUB_REPOSITORY,,}/aks-kargo-analysisrun-logs:${{ steps.semantic.outputs.new_release_version }} --build-arg VERSION=${{ steps.semantic.outputs.new_release_version }} .

    - name: Install Helm
      if: steps.semantic.outputs.new_release_published == 'true'
      uses: azure/setup-helm@v4

    - name: Update Helm Version
      if: steps.semantic.outputs.new_release_published == 'true'
      shell: bash
      run: |
          cp ./README.md ./charts/aks-kargo-analysisrun-logs/
          sed -i 's/0.0.1/${{ steps.semantic.outputs.new_release_version }}/' ./charts/aks-kargo-analysisrun-logs/Chart.yaml

    - name: Run chart-releaser
      if: steps.semantic.outputs.new_release_published == 'true'
      uses: helm/chart-releaser-action@v1
      env:
        CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
