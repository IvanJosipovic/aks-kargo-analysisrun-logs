# Default values for aks-kargo-analysisrun-logs.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/ivanjosipovic/aks-kargo-analysisrun-logs/aks-kargo-analysisrun-logs
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

settings:
  # Log Level(Trace, Debug, Information, Warning, Error, Critical, and None)
  logLevel: Information

  # Log Format (Simple or JSON)
  logFormat: Simple

  authentication:
    # Entra Tenant Id. This is needed for Service Principle authentication
    tenantId: ""

    # Entra Application Client ID. This is needed for Service Principle authentication
    clientId: ""

    # Entra Application Client Secret. This is needed for Service Principle authentication
    clientSecret: ""

    # Alternatively, enter the Kubernetes Secret name
    # Note, this will override the settings above
    # Must contain keys called tenantId or clientId or clientSecret
    kubeSecretName: ""

  environments:
  - name: development
    azureMonitorWorkspaceId: bc012b1d-b6a7-4e16-91b5-97093b388ee0
  - Name: production
    azureMonitorWorkspaceId: 7ab1c08d-ac24-4444-9994-5865f63ff309


serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
    # azure.workload.identity/client-id: #Client Id
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podLabels:
  # azure.workload.identity/use: "true"

podAnnotations:
  prometheus.io/scrape: 'true'
  prometheus.io/port: '8080'
  prometheus.io/path: '/metrics'

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 2000
  allowPrivilegeEscalation: false
  privileged: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
    - ALL

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
